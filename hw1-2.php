<?php
/*
class A {
    public function foo() {
        static $x = 0;
        echo ++$x . ', ';
    }
}
$a1 = new A();
$a2 = new A();
$a1->foo();
$a2->foo();
$a1->foo();
$a2->foo();

Здесь будет вывод: 1, 2, 3, 4
так как статическая переменная x метода foo() одного класса будет запомнена
и увеличена на 1 с каждым вызовом метода одного и того же класса,
хоть и объекты разные вызывают метод
*/
/*
class A {
    public function foo() {
        static $x = 0;
        echo ++$x . ', ';
    }
}
class B extends A {
}
$a1 = new A();
$b1 = new B();
$a1->foo();
$b1->foo();
$a1->foo();
$b1->foo();

Здесь будет вывод: 1, 1, 2, 2
так как класс B хоть и наследует класс A,
но все же это уже разные классы и здесь будет происходить
то же самое что в первом примере но для двух разных классов.
*/